<?php
/**
 * Markdown Template
 *
 * @link      https://guides.github.com/features/mastering-markdown/
 * @author    Pronamic <info@pronamic.eu>
 * @copyright 2005-2022 Pronamic
 * @license   GPL-3.0-or-later
 * @package   Pronamic\WordPress\Documentor
 */

namespace Pronamic\WordPress\Documentor;

if ( ! isset( $documentor ) ) {
	return;
}

$actions = $documentor->get_actions();
$filters = $documentor->get_filters();

$eol = "\n";

// Initialize arrays to group actions and filters by name
$grouped_actions = [];
$grouped_filters = [];

// Group actions by name
foreach ( $actions as $hook ) {
    $grouped_actions[ $hook->get_tag()->get_name() ][] = $hook;
}

// Group filters by name
foreach ( $filters as $hook ) {
    $grouped_filters[ $hook->get_tag()->get_name() ][] = $hook;
}

echo '# Hooks', $eol;
echo $eol;

echo '- [Actions](#actions)', $eol;
echo '- [Filters](#filters)', $eol;
echo $eol;

echo '## Actions', $eol;
echo $eol;

if ( empty( $grouped_actions ) ) {
    echo '*This project does not contain any WordPress actions.*', $eol;
    echo $eol;
} else {
    // Loop through each grouped action
    foreach ( $grouped_actions as $action_name => $hooks ) {
        echo "### {$action_name}", $eol;
        echo $eol;
        
        // Find the first hook with a docblock in this group
        $documented_hook = null;
        foreach ($hooks as $h) {
            if ($h->get_doc_block() !== null) {
                $documented_hook = $h;
                break;
            }
        }
        
        // If we found a documented hook, process it first with full documentation
        if ($documented_hook !== null) {
            $hook = $documented_hook;
            include __DIR__ . '/parts/markdown-hook.php';
            include __DIR__ . '/parts/markdown-hook-source.php';
            
            // Process remaining hooks with source only
            foreach ($hooks as $hook) {
                if ($hook !== $documented_hook) {
                    include __DIR__ . '/parts/markdown-hook-source.php';
                }
            }
        } else {
            // No documented hooks found, show sources for all hooks
            foreach ($hooks as $hook) {
                include __DIR__ . '/parts/markdown-hook-source.php';
            }
        }
    }
}

echo '## Filters', $eol;
echo $eol;

if ( empty( $grouped_filters ) ) {
    echo '*This project does not contain any WordPress filters.*', $eol;
    echo $eol;
} else {
    // Loop through each grouped filter
    foreach ( $grouped_filters as $filter_name => $hooks ) {
        echo "### {$filter_name}", $eol;
        echo $eol;
        
        // Find the first hook with a docblock in this group
        $documented_hook = null;
        foreach ($hooks as $h) {
            if ($h->get_doc_block() !== null) {
                $documented_hook = $h;
                break;
            }
        }
        
        // If we found a documented hook, process it first with full documentation
        if ($documented_hook !== null) {
            $hook = $documented_hook;
            include __DIR__ . '/parts/markdown-hook.php';
            include __DIR__ . '/parts/markdown-hook-source.php';
            
            // Process remaining hooks with source only
            foreach ($hooks as $hook) {
                if ($hook !== $documented_hook) {
                    include __DIR__ . '/parts/markdown-hook-source.php';
                }
            }
        } else {
            // No documented hooks found, show sources for all hooks
            foreach ($hooks as $hook) {
                include __DIR__ . '/parts/markdown-hook-source.php';
            }
        }
    }
}

echo $eol;

echo '<p align="center">';
printf(
    '<a href="%s"><img src="%s" alt="Pronamic WordPress Documentor" width="32" height="32"></a>',
    'https://github.com/pronamic/wp-documentor',
    'https://cdn.jsdelivr.net/gh/pronamic/wp-documentor@main/logos/pronamic-wp-documentor.svgo-min.svg'
);
echo '<br>';
printf(
    '<em>Generated by <a href="%s">Pronamic WordPress Documentor</a> <code>%s</code></em>',
    'https://github.com/pronamic/wp-documentor',
    '1.2.0'
);
echo '<p>';
echo $eol;
